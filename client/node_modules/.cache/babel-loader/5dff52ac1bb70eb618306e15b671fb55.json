{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyAb_MCmAQQZJAauN7G2-hAUSYwn4tRSD8I',\n  authDomain: 'crown-db-9467d.firebaseapp.com',\n  databaseURL: 'https://crown-db-9467d.firebaseio.com',\n  projectId: 'crown-db-9467d',\n  storageBucket: 'crown-db-9467d.appspot.com',\n  messagingSenderId: '169832412267',\n  appId: '1:169832412267:web:806bfa2256c8187ba6ed2e',\n  measurementId: 'G-KJV40E62XX'\n}; // Сохраняем пользователя в DB.\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // Если объект пользователя есть, тогда выполнится.\n  if (!userAuth) return; // firestore возвращает два вида объектов: QueryReference or QuerySnapshot. Они могут быть либо документом, либо коллекцией в зависимости от того какой именно запрашиваем. Ответ получим, даже, если данных в DB нет.\n  // Query - запрос на получение документа/коллекции из DB.\n  // QueryReference - отправили запрос на получение данных - получим в ответ QueryReference.\n  // QuerySnapshot -\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/React-Projects/Andrei-Neagoie/crown-clothing-2/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,gCAFE;AAGdC,EAAAA,WAAW,EAAE,uCAHC;AAIdC,EAAAA,SAAS,EAAE,gBAJG;AAKdC,EAAAA,aAAa,EAAE,4BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf,C,CAWA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E;AACA,MAAI,CAACD,QAAL,EAAe,OAF6D,CAG5E;AACA;AACA;AACA;AACA,CAPM;AASPX,QAAQ,CAACa,aAAT,CAAuBZ,MAAvB;AAEA,OAAO,MAAMa,IAAI,GAAGd,QAAQ,CAACc,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIhB,QAAQ,CAACc,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAehB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyAb_MCmAQQZJAauN7G2-hAUSYwn4tRSD8I',\r\n\tauthDomain: 'crown-db-9467d.firebaseapp.com',\r\n\tdatabaseURL: 'https://crown-db-9467d.firebaseio.com',\r\n\tprojectId: 'crown-db-9467d',\r\n\tstorageBucket: 'crown-db-9467d.appspot.com',\r\n\tmessagingSenderId: '169832412267',\r\n\tappId: '1:169832412267:web:806bfa2256c8187ba6ed2e',\r\n\tmeasurementId: 'G-KJV40E62XX',\r\n};\r\n\r\n// Сохраняем пользователя в DB.\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\t// Если объект пользователя есть, тогда выполнится.\r\n\tif (!userAuth) return;\r\n\t// firestore возвращает два вида объектов: QueryReference or QuerySnapshot. Они могут быть либо документом, либо коллекцией в зависимости от того какой именно запрашиваем. Ответ получим, даже, если данных в DB нет.\r\n\t// Query - запрос на получение документа/коллекции из DB.\r\n\t// QueryReference - отправили запрос на получение данных - получим в ответ QueryReference.\r\n\t// QuerySnapshot -\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}