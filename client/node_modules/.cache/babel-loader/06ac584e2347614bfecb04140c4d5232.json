{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Projects\\\\Andrei-Neagoie\\\\crown-clothing-2\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props; // Referencing collections in firestore.\n\n    const collectionRef = firestore.collection('collections'); // Whenever the colectionRef updates or whenever this code gets run for the first time, this collectionRef will send us the snapshot representing the code of our collections objects array at the time when this code renders. Из snapshot можно получить данные.\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      // console.log('snapshot:', snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/React-Projects/Andrei-Neagoie/crown-clothing-2/crown-clothing/src/pages/shop/shop.js"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;;AAEA,MAAMG,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAKtCC,uBALsC,GAKZ,IALY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEV,MAAAA;AAAF,QAAwB,KAAKW,KAAnC,CADmB,CAEnB;;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CAHmB,CAInB;;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAC9B,MAAOC,QAAP,IAAoB;AACnB;AACA,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAN6B,CAA/B;AAQA;;AAEDU,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEiB,KAAK,CAACC,IAAK,gBADrB;AAEC,MAAA,SAAS,EAAEjB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AASA;;AAjCqC;;AAoCvC,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACzCtB,EAAAA,iBAAiB,EAAGgB,cAAD,IAClBM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AAFgC,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\r\nimport CollectionPage from '../collection/collection';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\n\r\nclass ShopPage extends React.Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t};\r\n\r\n\tunsubscribeFromSnapshot = null;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\t// Referencing collections in firestore.\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\t// Whenever the colectionRef updates or whenever this code gets run for the first time, this collectionRef will send us the snapshot representing the code of our collections objects array at the time when this code renders. Из snapshot можно получить данные.\r\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n\t\t\tasync (snapshot) => {\r\n\t\t\t\t// console.log('snapshot:', snapshot);\r\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\t\tupdateCollections(collectionsMap);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\tcomponent={CollectionPage}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateCollections: (collectionsMap) =>\r\n\t\tdispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}