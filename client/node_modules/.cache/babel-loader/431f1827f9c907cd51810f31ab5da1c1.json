{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Projects\\\\Andrei-Neagoie\\\\crown-clothing-2\\\\crown-clothing\\\\src\\\\pages\\\\collection\\\\collection.js\";\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import CollectionItem from '../../components/collection-item/collection-item';\n// import { selectCollection } from '../../redux/shop/shop.selectors';\n// import './collection.scss';\n// const CollectionPage = ({ collection, match }) => {\n// \tconst { title, items } = collection;\n// \treturn (\n// \t\t<div className='collection-page'>\n// \t\t\t<h2 className='title'>{title}</h2>\n// \t\t\t<div className='items'>\n// \t\t\t\t{items.map((item) => (\n// \t\t\t\t\t<CollectionItem key={item.id} item={item} />\n// \t\t\t\t))}\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n// const mapStateToProps = (state, ownProps) => ({\n// \tcollection: selectCollection(ownProps.match.params.collectionId)(state),\n// });\n// export default connect(mapStateToProps)(CollectionPage);\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport './collection.scss';\n\nconst CollectionPage = ({\n  collection,\n  match\n}) => {\n  const {\n    title,\n    items\n  } = collection;\n  console.log('CollectionPage collection:', collection);\n  console.log('CollectionPage match.params.collectionId:', match); // hats\n  // console.log('selectCollection:', selectCollection(1));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collection-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }))));\n}; // mapStateToProps принимает два параметра state и собственные props компонента.\n// Т.к. CollectionPage обернут в Route, он имеет доступ к методу match.\n// При вызове selectCollection, она возвращает memoize (относится к селекторам - библиотека reselect. нужно для того, чтобы в случае, если значения в state остались прежними, компонент не обновлялся, т.к. в mapStateToProps в любом случае возвращается новый объект, даже если state остался тем же.) и туда, как я понимаю, идет state.\n// selectCollection принимает параметр из ownProps в анонимную функцию, которую он возвращает. Та функция, в свою очередь возвращает createSelector, куда и идет state. carrying.\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n  };\n}; // const mapStateToProps = (state) => {\n// \tconsole.log('Test');\n// \treturn {\n// \t\titemCount: selectCartItemsCount(state),\n// \t};\n// };\n\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["E:/React-Projects/Andrei-Neagoie/crown-clothing-2/crown-clothing/src/pages/collection/collection.js"],"names":["React","connect","CollectionItem","selectCollection","CollectionPage","collection","match","title","items","console","log","map","item","id","mapStateToProps","state","ownProps","params","collectionId"],"mappings":";AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,kDAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,OAAO,mBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AACjD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBH,UAAzB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,UAA1C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDJ,KAAzD,EAJiD,CAIgB;AACjE;;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,KAAvB,CADD,eAEC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACV,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAFD,CADD;AAUA,CAhBD,C,CAkBA;AACA;AACA;AAEA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AACNX,IAAAA,UAAU,EAAEF,gBAAgB,CAACa,QAAQ,CAACV,KAAT,CAAeW,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDH,KAArD;AADN,GAAP;AAGA,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,OAAO,CAACa,eAAD,CAAP,CAAyBV,cAAzB,CAAf","sourcesContent":["// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\n// import CollectionItem from '../../components/collection-item/collection-item';\r\n\r\n// import { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\n// import './collection.scss';\r\n\r\n// const CollectionPage = ({ collection, match }) => {\r\n// \tconst { title, items } = collection;\r\n// \treturn (\r\n// \t\t<div className='collection-page'>\r\n// \t\t\t<h2 className='title'>{title}</h2>\r\n// \t\t\t<div className='items'>\r\n// \t\t\t\t{items.map((item) => (\r\n// \t\t\t\t\t<CollectionItem key={item.id} item={item} />\r\n// \t\t\t\t))}\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// const mapStateToProps = (state, ownProps) => ({\r\n// \tcollection: selectCollection(ownProps.match.params.collectionId)(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(CollectionPage);\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport './collection.scss';\r\n\r\nconst CollectionPage = ({ collection, match }) => {\r\n\tconst { title, items } = collection;\r\n\r\n\tconsole.log('CollectionPage collection:', collection);\r\n\tconsole.log('CollectionPage match.params.collectionId:', match); // hats\r\n\t// console.log('selectCollection:', selectCollection(1));\r\n\treturn (\r\n\t\t<div className='collection-page'>\r\n\t\t\t<h2 className='title'>{title}</h2>\r\n\t\t\t<div className='items'>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<CollectionItem key={item.id} item={item} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// mapStateToProps принимает два параметра state и собственные props компонента.\r\n// Т.к. CollectionPage обернут в Route, он имеет доступ к методу match.\r\n// При вызове selectCollection, она возвращает memoize (относится к селекторам - библиотека reselect. нужно для того, чтобы в случае, если значения в state остались прежними, компонент не обновлялся, т.к. в mapStateToProps в любом случае возвращается новый объект, даже если state остался тем же.) и туда, как я понимаю, идет state.\r\n\r\n// selectCollection принимает параметр из ownProps в анонимную функцию, которую он возвращает. Та функция, в свою очередь возвращает createSelector, куда и идет state. carrying.\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tcollection: selectCollection(ownProps.match.params.collectionId)(state),\r\n\t};\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n// \tconsole.log('Test');\r\n// \treturn {\r\n// \t\titemCount: selectCartItemsCount(state),\r\n// \t};\r\n// };\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}