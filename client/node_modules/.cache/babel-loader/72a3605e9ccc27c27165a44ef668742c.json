{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Projects\\\\Andrei-Neagoie\\\\crown-clothing-2\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.js\";\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import CollectionsOverview from '../../components/collections-overview/collections-overview';\n// import CollectionPage from '../collection/collection';\n// const ShopPage = ({ match }) => {\n// \tconsole.log('ShopPage -> match', match);\n// \treturn (\n// \t\t<div className='shop-page'>\n// \t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\n// \t\t\t<Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n// \t\t</div>\n// \t);\n// };\n// export default ShopPage;\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection'; // В App.js эта страница обернута в Route, а значит в ее props передается методы Route - match, location, history.\n\nconst ShopPage = ({\n  match\n}) => {\n  // console.log('SHOP PAGE', match.path);\n  // console.log('SHOP PAGE', match);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["E:/React-Projects/Andrei-Neagoie/crown-clothing-2/crown-clothing/src/pages/shop/shop.js"],"names":["React","Route","CollectionsOverview","CollectionPage","ShopPage","match","path"],"mappings":";AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B;AACA;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEJ,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAOC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEH,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA,CAdD;;AAgBA,eAAeC,QAAf","sourcesContent":["// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n\r\n// import CollectionsOverview from '../../components/collections-overview/collections-overview';\r\n// import CollectionPage from '../collection/collection';\r\n\r\n// const ShopPage = ({ match }) => {\r\n// \tconsole.log('ShopPage -> match', match);\r\n// \treturn (\r\n// \t\t<div className='shop-page'>\r\n// \t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n// \t\t\t<Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// export default ShopPage;\r\n\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\r\nimport CollectionPage from '../collection/collection';\r\n\r\n// В App.js эта страница обернута в Route, а значит в ее props передается методы Route - match, location, history.\r\nconst ShopPage = ({ match }) => {\r\n\t// console.log('SHOP PAGE', match.path);\r\n\t// console.log('SHOP PAGE', match);\r\n\treturn (\r\n\t\t<div className='shop-page'>\r\n\t\t\t{/* CollectionsOverview - страница презентации категорий товаров по адресу shop. */}\r\n\t\t\t{/* Здесь `${match.path}` = /shop т.к. в App.js path='/shop' */}\r\n\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n\t\t\t{/* Здесь collectionId - то, что было введено в адресной строке */}\r\n\t\t\t{/* CollectionPage - страница товара - переход с главной. */}\r\n\t\t\t{/* Здесь path /shop берется из App.js + добавляется collectionId по которому выбирается collection, которую нужно отобразить. Если вводится ссылка в адресной строке, тогда collectionId будет передано в match.params в компонент. А вот, когда переходим с главной страницы, тогда сработают пути их linkUrl смотреть в menu-item и directory-reducer (здесь хранится массив sections, где linkUrl) */}\r\n\t\t\t<Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShopPage;\r\n"]},"metadata":{},"sourceType":"module"}