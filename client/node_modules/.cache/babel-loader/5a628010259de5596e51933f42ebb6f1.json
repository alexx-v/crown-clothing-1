{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyAb_MCmAQQZJAauN7G2-hAUSYwn4tRSD8I',\n  authDomain: 'crown-db-9467d.firebaseapp.com',\n  databaseURL: 'https://crown-db-9467d.firebaseio.com',\n  projectId: 'crown-db-9467d',\n  storageBucket: 'crown-db-9467d.appspot.com',\n  messagingSenderId: '169832412267',\n  appId: '1:169832412267:web:806bfa2256c8187ba6ed2e',\n  measurementId: 'G-KJV40E62XX'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  console.log('transformedCollection:', transformedCollection);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/React-Projects/Andrei-Neagoie/crown-clothing-2/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,gCAFE;AAGdC,EAAAA,WAAW,EAAE,uCAHC;AAIdC,EAAAA,SAAS,EAAE,gBAJG;AAKdC,EAAAA,aAAa,EAAE,4BALD;AAMdC,EAAAA,iBAAiB,EAAE,cANL;AAOdC,EAAAA,KAAK,EAAE,2CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACrB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGV;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAOa,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD;;AACD,SAAOf,OAAP;AACA,CAvBM;AAyBP,OAAO,MAAMgB,yBAAyB,GAAG,OACxCC,aADwC,EAExCC,YAFwC,KAGpC;AACJ,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,GAAD,IAAS;AAC7B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AAEAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACA,GAJD;AAMA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACA,CAdM;AAgBP,OAAO,MAAMC,+BAA+B,GAAIC,WAAD,IAAiB;AAC/D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAsB5B,GAAD,IAAS;AAC3D,UAAM;AAAE6B,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB9B,GAAG,CAAC+B,IAAJ,EAAzB;AACA,WAAO;AACNC,MAAAA,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADd;AAENC,MAAAA,EAAE,EAAEnC,GAAG,CAACmC,EAFF;AAGNN,MAAAA,KAHM;AAINC,MAAAA;AAJM,KAAP;AAMA,GAR6B,CAA9B;AASAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCc,qBAAtC;AACA,CAXM;AAaP,OAAO,MAAMU,IAAI,GAAGpD,QAAQ,CAACoD,IAAT,EAAb;AACP,OAAO,MAAMrC,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMsC,QAAQ,GAAG,IAAIrD,QAAQ,CAACoD,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAerD,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n\tapiKey: 'AIzaSyAb_MCmAQQZJAauN7G2-hAUSYwn4tRSD8I',\r\n\tauthDomain: 'crown-db-9467d.firebaseapp.com',\r\n\tdatabaseURL: 'https://crown-db-9467d.firebaseio.com',\r\n\tprojectId: 'crown-db-9467d',\r\n\tstorageBucket: 'crown-db-9467d.appspot.com',\r\n\tmessagingSenderId: '169832412267',\r\n\tappId: '1:169832412267:web:806bfa2256c8187ba6ed2e',\r\n\tmeasurementId: 'G-KJV40E62XX',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif (!snapShot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error creating user', error.message);\r\n\t\t}\r\n\t}\r\n\treturn userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n\tcollectionKey,\r\n\tobjectsToAdd\r\n) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\r\n\tconst batch = firestore.batch();\r\n\tobjectsToAdd.forEach((obj) => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\r\n\t\tbatch.set(newDocRef, obj);\r\n\t});\r\n\r\n\treturn await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n\tconst transformedCollection = collections.docs.map((doc) => {\r\n\t\tconst { title, items } = doc.data();\r\n\t\treturn {\r\n\t\t\trouteName: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle,\r\n\t\t\titems,\r\n\t\t};\r\n\t});\r\n\tconsole.log('transformedCollection:', transformedCollection);\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}